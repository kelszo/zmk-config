/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Layer_0 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
          &kp TAB   &kp Q   &kp W     &kp E   &kp R      &kp T    &kp Y   &kp U      &kp I    &kp O     &kp P  &kp BSPC
   &kp LEFT_SHIFT   &kp A   &kp S     &kp D   &kp F      &kp G    &kp H   &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
 &kp LEFT_CONTROL   &kp Z   &kp X     &kp C   &kp V      &kp B    &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                                   &kp LGUI   &mo 1  &kp SPACE  &kp RET   &mo 2   &kp RALT
            >;
        };

        Layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &bootloader            &kp N1            &kp N2            &kp N3            &kp N4            &kp N5    &kp N6    &kp N7  &kp N8     &kp N9  &kp N0    &kp BSPC
      &trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &kp DELETE
      &trans            &trans            &trans            &trans            &trans            &trans    &trans    &trans  &trans     &trans  &trans      &trans
                                                            &trans            &trans            &trans    &trans     &mo 3  &trans
            >;
        };

        Layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &trans   &kp EXCL     &kp AT   &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &bootloader
 &trans  &kp RA(W)  &kp RA(Q)  &kp RA(P)    &trans     &trans  &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH    &kp GRAVE
 &trans     &trans     &trans     &trans    &trans     &trans  &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE    &kp TILDE
                                &kp LGUI     &mo 3  &kp SPACE    &kp RET     &trans         &kp RALT
            >;
        };

        Layer_3 {
            bindings = <
     &trans        &kp F1        &kp F2      &kp F3            &kp F4      &kp F5  &kp F6         &kp F7        &kp F8        &kp F9       &kp F10  &kp PRINTSCREEN
 &kp K_MUTE  &kp K_VOL_DN  &kp K_VOL_UP  &kp K_PREV  &kp K_PLAY_PAUSE  &kp K_NEXT  &trans    &kp PAGE_UP        &trans        &trans        &trans           &trans
     &trans        &trans        &trans      &trans            &trans      &trans  &trans  &kp PAGE_DOWN  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_CLR
                                             &trans            &trans      &trans  &trans         &trans        &trans
            >;
        };
    };
};
